@use '../../styles/variables' as *;
@use 'sass:color';

.hero {
  min-height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
  background: linear-gradient(135deg, $color-soft-white 0%, $color-primary-light 100%);
  position: relative;
  overflow: hidden;
  padding-top: 80px; // Account for fixed navigation

  @media (max-width: $tablet) {
    padding-top: 100px; // Increase padding on tablet and mobile
  }

  @media (max-width: $mobile) {
    padding-top: 120px; // Even more padding on mobile for better spacing
    min-height: calc(100vh - 40px); // Slightly reduce height to accommodate padding
  }

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: url("data:image/svg+xml,%3Csvg width='40' height='40' viewBox='0 0 40 40' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%23007BFF' fill-opacity='0.03' fill-rule='evenodd'%3E%3Cpath d='m0 40l40-40h-40v40zm40 0v-40h-40l40 40z'/%3E%3C/g%3E%3C/svg%3E");
    animation: float 20s ease-in-out infinite;
  }
}

@keyframes float {
  0%, 100% { transform: translateY(0px) rotate(0deg); }
  50% { transform: translateY(-20px) rotate(1deg); }
}

.heroContent {
  text-align: center;
  z-index: 2;
  position: relative;
  padding: 1rem;

  @media (max-width: $tablet) {
    padding: 1rem 0.5rem;
  }

  @media (max-width: $mobile) {
    padding: 0.5rem;
  }
}

.avatar {
  width: 150px;
  height: 150px;
  border-radius: 50%;
  margin: 0 auto 2rem;
  position: relative;
  overflow: hidden;
  border: 4px solid $color-primary;
  box-shadow: 0 8px 32px rgba($color-primary, 0.2);
  transition: $transition-default;

  @media (max-width: $tablet) {
    width: 120px;
    height: 120px;
    margin: 0 auto 1.5rem;
  }

  @media (max-width: $mobile) {
    width: 100px;
    height: 100px;
    margin: 0 auto 1rem;
    border: 3px solid $color-primary;
  }

  &:hover {
    transform: translateY(-5px);
    box-shadow: 0 12px 40px rgba($color-primary, 0.3);
  }

  :global(img) {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
}

.title {
  font-size: 3.5rem;
  font-weight: 700;
  color: $color-primary-dark;
  margin-bottom: 1rem;
  background: linear-gradient(135deg, $color-primary-dark 0%, $color-primary 100%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;

  @media (max-width: $tablet) {
    font-size: 2.5rem;
  }

  @media (max-width: $mobile) {
    font-size: 2rem;
  }
}

.subtitle {
  font-size: 1.5rem;
  color: $color-accent-cyan;
  font-weight: 500;
  margin-bottom: 1.5rem;

  @media (max-width: $tablet) {
    font-size: 1.25rem;
  }
}

.description {
  font-size: 1.125rem;
  color: $color-slate-gray;
  max-width: 600px;
  margin: 0 auto 3rem;
  line-height: 1.7;

  @media (max-width: $tablet) {
    font-size: 1rem;
  }
}

.skills {
  display: flex;
  justify-content: center;
  gap: 1rem;
  flex-wrap: wrap;
  margin-bottom: 3rem;
}

.skillTag {
  background: rgba($color-primary, 0.1);
  color: $color-primary;
  padding: 0.5rem 1rem;
  border-radius: $border-radius;
  font-weight: 500;
  font-size: 0.875rem;
  border: 1px solid rgba($color-primary, 0.2);
  transition: $transition-default;

  &:hover {
    background: rgba($color-primary, 0.15);
    transform: translateY(-2px);
  }
}

.cta {
  display: flex;
  gap: 1rem;
  justify-content: center;
  flex-wrap: wrap;
}

.button {
  padding: 1rem 2rem;
  border-radius: $border-radius;
  font-weight: 600;
  font-size: 1rem;
  text-decoration: none;
  display: inline-flex;
  align-items: center;
  gap: 0.5rem;
  transition: $transition-default;
  position: relative;
  overflow: hidden;

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
    transition: $transition-default;
  }

  &:hover::before {
    left: 100%;
  }

  &.primary {
    background: $color-primary;
    color: white;
    box-shadow: 0 4px 15px rgba($color-primary, 0.3);

    &:hover {
      background: color.adjust($color-primary, $lightness: -10%);
      transform: translateY(-2px);
      box-shadow: 0 8px 25px rgba($color-primary, 0.4);
    }
  }

  &.secondary {
    background: transparent;
    color: $color-primary;
    border: 2px solid $color-primary;

    &:hover {
      background: $color-primary;
      color: white;
      transform: translateY(-2px);
    }
  }
}

.scrollIndicator {
  position: absolute;
  bottom: 2rem;
  left: 50%;
  transform: translateX(-50%);
  color: $color-slate-gray;
  animation: bounce 2s infinite;
  cursor: pointer;
}

@keyframes bounce {
  0%, 20%, 50%, 80%, 100% { transform: translateX(-50%) translateY(0); }
  40% { transform: translateX(-50%) translateY(-10px); }
  60% { transform: translateX(-50%) translateY(-5px); }
}
